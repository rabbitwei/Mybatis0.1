<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rabbit.pojo">

    <!--当有返回值的时候，需要指定返回值的类型；
        不过当返回的是集合的时候，我们只需要指定集合中元素的类型就行了-->
    <select id="list" resultType="Category">
        select * from category_;
    </select>
    <insert id="add" parameterType="Category">
        insert into category_ (name) values (#{name})
    </insert>
    <update id="update" parameterType="Category">
        update category_ set name = (#{name}) where id = (#{id})
    </update>
    <delete id="delete" parameterType="_int">
        delete from category_ where id = (#{id})
    </delete>

    <!--模糊查询，根据名字进行模糊参数，
        concat()函数是 mysql 的函数-->
    <select id="listCategoryByName" parameterType="string" resultType="Category">
        select * from category_ where name like concat('%', #{name}, '%')
    </select>

    <!--分页查询， 因为需要多个参数，所以封装到 Map 中-->
    <select id="pagination" parameterType="map" resultType="Category">
        select * from category_ limit #{start}, #{count}
    </select>


    <!--=============================关系映射===============================================-->
                                <!--一对多的关系-->
    <!--
        resultMap把数据取出来放在对应的 对象属性里,
        当列名与对象属性名不同的时候，我们需要使用 resultMap 进行字段和属性的对应
        注： Category的id 字段 和Product的id字段同名，Mybatis不知道谁是谁的，所以需要通过取别名cid,pid来区分。
name字段同理。
    -->
    <resultMap type="Category" id="categoryBean">
        <!--property: 是pojo 对象的属性名
            column: 是 Mybatis 新构建的一张临时表的列名， 不是数据库中的列名-->
        <!--id是主键-->
        <id property="id" column="cid"/>
        <result property="name" column="cname"/>
        <!--一对多使用的是 collection 标签,
        注意 ofType 属性，该属性的作用是： 用来将 JavaBean（或字段）属性的类型和集合存储的类型区分开来
        -->
        <collection property="products" ofType="Product">
            <!--id是主键-->
            <id property="id" column="pid"/>
            <result property="name" column="pname"/>
            <result property="price" column="price"/>
        </collection>
    </resultMap>

    <!--使用左连接来进行多表查询-->
    <select id="listCategory" resultMap="categoryBean">
        select c.*, p.*, c.id 'cid', p.id 'pid', c.name 'cname', p.name 'pname'
        from category_ c left join product_ p
        on c.id = p.cid
    </select>

    <!--=============================关系映射===============================================-->



</mapper>